PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_viewer ${SUBSYS_NAME} pcd_viewer.cpp)
target_link_libraries(pcl_viewer pcl_common pcl_io pcl_kdtree pcl_visualization pcl_search)
if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
    set_target_properties(pcl_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
endif()

PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_pcd_image_viewer ${SUBSYS_NAME} image_viewer.cpp)
target_link_libraries(pcl_pcd_image_viewer pcl_common pcl_io pcl_kdtree pcl_visualization)
if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
    set_target_properties(pcl_pcd_image_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
endif()
    
PCL_ADD_EXECUTABLE(pcl_timed_trigger_test ${SUBSYS_NAME} timed_trigger_test.cpp)
target_link_libraries(pcl_timed_trigger_test pcl_io pcl_common pcl_kdtree pcl_visualization)
if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
    set_target_properties(pcl_timed_trigger_test PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
endif()

PCL_ADD_EXECUTABLE(pcl_hdl_viewer_simple ${SUBSYS_NAME} hdl_viewer_simple.cpp)
target_link_libraries(pcl_hdl_viewer_simple pcl_io pcl_common pcl_visualization)
if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
    set_target_properties(pcl_hdl_viewer_simple PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
endif()

if(OPENNI_FOUND AND BUILD_OPENNI)

    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_pcd_grabber_viewer ${SUBSYS_NAME} pcd_grabber_viewer.cpp)
    target_link_libraries(pcl_pcd_grabber_viewer pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_pcd_grabber_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()
    
    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_image_grabber_saver ${SUBSYS_NAME} image_grabber_saver.cpp)
    target_link_libraries(pcl_image_grabber_saver pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_pcd_grabber_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()

    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_image_grabber_viewer ${SUBSYS_NAME} image_grabber_viewer.cpp)
    target_link_libraries(pcl_image_grabber_viewer pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_image_grabber_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()
      
    #PCL_ADD_EXECUTABLE(pcl_openni_viewer_simple ${SUBSYS_NAME} openni_viewer_simple.cpp)
    #target_link_libraries(pcl_openni_viewer_simple pcl_common pcl_io pcl_kdtree pcl_visualization)

    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_oni_viewer ${SUBSYS_NAME} oni_viewer_simple.cpp)
    target_link_libraries(pcl_oni_viewer pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_oni_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()

    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_openni_viewer ${SUBSYS_NAME} openni_viewer.cpp)
    target_link_libraries(pcl_openni_viewer pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_openni_viewer PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()

    PCL_ADD_EXECUTABLE_OPT_BUNDLE(pcl_openni_image ${SUBSYS_NAME} openni_image.cpp)
    target_link_libraries(pcl_openni_image pcl_common pcl_io pcl_kdtree pcl_visualization)
    if(CMAKE_COMPILER_IS_GNUCXX AND MINGW)
        set_target_properties(pcl_openni_image PROPERTIES LINK_FLAGS "-Wl,--allow-multiple-definition")
    endif()
endif()

